@startuml

package org.eclipse.milo.opcua.sdk.server.api {
    
    package services {

        interface AttributeServices {
            void read(ReadContext context, Double maxAge, TimestampsToReturn timestamps, List<ReadValueId> readValueIds)
            void write(WriteContext context, List<WriteValue> writeValues)
        }

        interface AttributeHistoryServices {
            default void historyRead(HistoryReadContext context, HistoryReadDetails readDetails, TimestampsToReturn timestamps, List<HistoryReadValueId> readValueIds)
            default void historyUpdate(HistoryUpdateContext context, List<HistoryUpdateDetails> updateDetails)
        }

        interface MethodServices {
            void call(CallContext context, List<CallMethodRequest> requests)
        }

        interface MonitoredItemServices {
            default void onCreateDataItem(ReadValueId itemToMonitor, Double requestedSamplingInterval, UInteger requestedQueueSize, BiConsumer<Double, UInteger> revisionCallback)
            default void onModifyDataItem(ReadValueId itemToModify, Double requestedSamplingInterval, UInteger requestedQueueSize, BiConsumer<Double, UInteger> revisionCallback)
            default void onCreateEventItem(ReadValueId itemToMonitor, UInteger requestedQueueSize, Consumer<UInteger> revisionCallback)
            default void onModifyEventItem(ReadValueId itemToModify, UInteger requestedQueueSize, Consumer<UInteger> revisionCallback)
            void onDataItemsCreated(List<DataItem> dataItems)
            void onDataItemsModified(List<DataItem> dataItems)
            void onDataItemsDeleted(List<DataItem> dataItems)
            default void onEventItemsCreated(List<EventItem> eventItems)
            default void onEventItemsModified(List<EventItem> eventItems)
            default void onEventItemsDeleted(List<EventItem> eventItems)
            void onMonitoringModeChanged(List<MonitoredItem> monitoredItems)
        }

        interface NodeManagementServices {
            default void addNodes(AddNodesContext context, List<AddNodesItem> nodesToAdd)
            default void deleteNodes(DeleteNodesContext context, List<DeleteNodesItem> nodesToDelete)
            default void addReferences(AddReferencesContext context, List<AddReferencesItem> referencesToAdd)
            default void deleteReferences(DeleteReferencesContext context, List<DeleteReferencesItem> referencesToDelete)
        }

        interface ViewServices {
            default void browse(BrowseContext context, NodeId nodeId)
            void browse(BrowseContext context, ViewDescription view, NodeId nodeId)
            void getReferences(BrowseContext context, ViewDescription view, NodeId nodeId)
            default void registerNodes(RegisterNodesContext context, List<NodeId> nodeIds)
            default void unregisterNodes(UnregisterNodesContext context, List<NodeId> nodeIds)
            default UInteger getViewCount()
        }

    }

    interface AddressSpace {
    }
    AddressSpace extends AttributeServices
    AddressSpace extends AttributeHistoryServices
    AddressSpace extends MethodServices
    AddressSpace extends MonitoredItemServices
    AddressSpace extends NodeManagementServices
    AddressSpace extends ViewServices

    interface Namespace {
        UShort getNamespaceIndex()
        String getNamespaceUri()
    }
    Namespace extends AddressSpace


    ManagedAddressSpaceFragment  <|-- ManagedNamespace
    Namespace <|.. ManagedNamespace
    Lifecycle <|.. ManagedNamespace

}

@enduml